name: Deploy Application

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    steps:
      # checkout action
      - uses: actions/checkout@v4

      # Frontend: build
      - name: Build Frontend
        working-directory: front-lms
        run: |
          npm ci
          npm run build
          tar -czf front-dist.tar.gz -C dist .

      # prepare PHP 8.1
      - name: Configure PHP 8.1
        uses: shivammathur/setup-php@master
        with:
          php-version: 8.1
          extensions: mbstring, ctype, fileinfo, openssl, PDO, bcmath, json, tokenizer, xml

      # Backend: install composer dependencies and create artifact
      - name: Setup Backend
        working-directory: back-lms
        run: |
          composer install --no-dev --no-interaction --prefer-dist --optimize-autoloader
          tar -czf back.tar.gz \
            --exclude=.git \
            --exclude=node_modules \
            --exclude=tests \
            --exclude=storage/logs/* \
            *

      # Use webfactory/ssh-agent to set up SSH
      - name: Start SSH Agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.BACKEND_SSH_PRIVATE_KEY }}

      # Deploy backend
      - name: Deploy Backend
        env:
          SERVER_USER: ${{ secrets.BACKEND_USER }}
          BACKEND_SERVER_IP: ${{ secrets.BACKEND_HOST }}
        run: |
          echo "Verifying SSH connection"
          ssh -o StrictHostKeyChecking=no $SERVER_USER@$BACKEND_SERVER_IP "echo 'SSH connection successful'"
          echo "Deploying application"
          scp ./back-lms/back.tar.gz $SERVER_USER@$BACKEND_SERVER_IP:/tmp
          ssh $SERVER_USER@$BACKEND_SERVER_IP << 'EOF'
          echo "Extracting application files"
          cd /home/api.coursecasts.com/public_html/back-lms
          tar -xzf /tmp/back.tar.gz -C .
          EOF

      # Deploy Frontend
      - name: Deploy Frontend
        env:
          FRONTEND_SERVER_USER: ${{ secrets.FRONTEND_USER }}
          FRONTEND_SERVER_IP: ${{ secrets.FRONTEND_HOST }}
        run: |
          echo "Verifying SSH connection for frontend"
          ssh -o StrictHostKeyChecking=no $FRONTEND_SERVER_USER@$FRONTEND_SERVER_IP "echo 'SSH connection successful'"
          echo "Deploying frontend application"
          scp ./front-lms/front-dist.tar.gz $FRONTEND_SERVER_USER@$FRONTEND_SERVER_IP:/tmp
          ssh $FRONTEND_SERVER_USER@$FRONTEND_SERVER_IP << 'EOF'
          echo "Extracting frontend application files"
          cd /home/coursecasts/sealms/front-lms/dist/
          tar -xzf /tmp/front-dist.tar.gz -C .
          EOF