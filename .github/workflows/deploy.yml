name: Deploy Application

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    steps:
      # checkout action
      - uses: actions/checkout@v4

      # Frontend: build
      - name: Build Frontend
        working-directory: front-lms
        run: |
          npm install
          npm run build

      # prepare PHP 8.1
      - name: Configure PHP 8.1
        uses: shivammathur/setup-php@master
        with:
          php-version: 8.1
          extensions: mbstring, ctype, fileinfo, openssl, PDO, bcmath, json, tokenizer, xml

      # Backend: install composer dependencies and create artifact
      - name: Setup Backend
        working-directory: back-lms
        run: |
          composer install --no-dev --no-interaction --prefer-dist --optimize-autoloader
          tar -czf back.tar.gz \
            --exclude=.git \
            --exclude=node_modules \
            --exclude=tests \
            --exclude=storage/logs/* \
            *
      # deploy
      - name: Deploy Backend
        env:
          SSH_PRIVATE_KEY: ${{ secrets.BACKEND_SSH_PRIVATE_KEY }}
          SERVER_USER: root
          BACKEND_SERVER_IP: 204.48.31.64
        run: |
          echo "Setting up SSH"
          mkdir -p ~/.ssh && chmod 700 ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa
          echo "Fetching host key"
          ssh-keyscan -H $BACKEND_SERVER_IP >> ~/.ssh/known_hosts
          echo "Verifying SSH connection"
          ssh -o StrictHostKeyChecking=no $SERVER_USER@$BACKEND_SERVER_IP "echo 'SSH connection successful'"
          echo "Deploying application"
          scp ./back-lms/back.tar.gz $SERVER_USER@$BACKEND_SERVER_IP:/tmp
          ssh $SERVER_USER@$BACKEND_SERVER_IP << 'EOF'
          cd /home
          mkdir -p test
          cd test
          tar -xzf /tmp/back.tar.gz -C .
          EOF